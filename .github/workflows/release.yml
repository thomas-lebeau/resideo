name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: "Version bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: "patch"

permissions:
  contents: write

jobs:
  # version_bump:
  #   if: github.actor == 'thomas-lebeau'
  #   runs-on: ubuntu-latest
  #   outputs:
  #     tag: ${{ steps.version.outputs.tag }}
  #     new_version: ${{ steps.version.outputs.new_version }}
  #     previous_version: ${{ steps.version.outputs.previous_version }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "24.8.0"
  #         cache: "npm"

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Configure Git
  #       run: |
  #         git config --global user.name 'github-actions[bot]'
  #         git config --global user.email 'github-actions[bot]@users.noreply.github.com'

  #     - name: Bump version
  #       id: version
  #       run: |
  #         PREVIOUS_VERSION=$(node -p "require('./package.json').version")
  #         npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
  #         NEW_VERSION=$(node -p "require('./package.json').version")
  #         echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
  #         echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
  #         echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT

  #     - name: Commit version bump
  #       run: |
  #         git add package.json package-lock.json
  #         git commit -m "chore: release ${{ steps.version.outputs.tag }}"
  #         git tag ${{ steps.version.outputs.tag }}
  #         git push origin main
  #         git push origin ${{ steps.version.outputs.tag }}

  build-linux-x64:
    # needs: version_bump
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # ref: main  # Uncomment this when version_bump is active
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24.8.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build binary
        run: |
          npm run build

      - name: Create release archive
        run: |
          mkdir -p release
          cp bin/raspberry-home-monitor release/
          chmod +x release/raspberry-home-monitor
          cd release
          tar -czf ../raspberry-home-monitor-linux-x64.tar.gz raspberry-home-monitor

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: raspberry-home-monitor-linux-x64
          path: raspberry-home-monitor-linux-x64.tar.gz

  build-linux-armv7:
    # needs: version_bump
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # ref: main  # Uncomment this when version_bump is active
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build for ARMv7
        run: |
          docker run --rm -v $PWD:/app -w /app --platform linux/arm/v7 node:18-buster bash -c "
            sed -i 's|deb.debian.org/debian|archive.debian.org/debian|g' /etc/apt/sources.list &&
            sed -i 's|security.debian.org|archive.debian.org/debian-security|g' /etc/apt/sources.list &&
            sed -i '/stretch-updates/d' /etc/apt/sources.list &&
            apt update &&
            apt install -y bluetooth bluez libbluetooth-dev libudev-dev build-essential python3 make g++ git &&
            git config --global --add safe.directory /app &&
            npm ci --build-from-source &&
            npm run build
          "
      - name: Create release archive
        run: |
          mkdir -p release
          cp bin/raspberry-home-monitor release/
          chmod +x release/raspberry-home-monitor
          cp -r node_modules release/
          cd release
          tar -czf ../raspberry-home-monitor-linux-armv7.tar.gz raspberry-home-monitor node_modules

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: raspberry-home-monitor-linux-armv7
          path: raspberry-home-monitor-linux-armv7.tar.gz

  # release:
  #   needs: [version_bump, build-linux-x64, build-linux-armv7]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v4

  #     - name: Create GitHub Release
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         tag_name: ${{ needs.version_bump.outputs.tag }}
  #         name: Release ${{ needs.version_bump.outputs.tag }}
  #         fail_on_unmatched_files: true
  #         files: |
  #           raspberry-home-monitor-linux-x64/raspberry-home-monitor-linux-x64.tar.gz
  #           raspberry-home-monitor-linux-armv7/raspberry-home-monitor-linux-armv7.tar.gz
  #         body: |
  #           **Full Changelog**: https://github.com/thomas-lebeau/resideo/compare/v${{ needs.version_bump.outputs.previous_version }}...${{ needs.version_bump.outputs.tag }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
